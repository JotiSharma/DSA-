#include <iostream>
using namespace std;
class Node
{
     
     public:
     Node*prev;
     Node*next;
     int data;
     Node(int data)
     {  
         this->data=data;
         this->next=NULL;
         this->prev=NULL;
     }
     
};

void insertAtHead(Node*&head , int d)
{
    Node*temp= new Node(d);
    temp->next = head;
    head->prev=temp;
    head= temp;
}
void insertAtTail(Node*&tail, int d)
{
    Node*temp=new Node(d);
    tail->next=temp;
    temp->prev= tail;
    tail=temp;
}
void insertAtPos(Node*&head , Node*&tail , int pos, int d)
{
    if(pos==1)
    {
        insertAtHead(head , d);
        return;
    }
    else
    {
        int cnt=1;
       Node*temp=head;
        
        while(cnt <= pos)
        {   
          
            temp=temp->next;
              cnt++;
        }
        Node*nodeToInsert= new Node(d);
        temp->next = nodeToInsert->prev;
     temp->next->prev= nodeToInsert->next;
        nodeToInsert->next= temp->next;
        temp=curr;
    
        
    }
}
void print(Node*&head)
{
    Node*temp=head;
    while(temp != NULL)
    {
        cout<<temp->data<<" ";
        temp= temp->next;
    }
    cout<<endl;
}
int main()
{

  Node*obj= new Node(10);
  Node*head=obj;
   Node*tail=obj;
  insertAtHead(head, 15);
  print(head);
  insertAtTail(tail, 25);
  print(head);
  insertAtPos(head , tail , 2, 30);
  print(head);
    return 0;
}